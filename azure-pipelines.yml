# Pipeline for provisioning and deployment of infrastructure.

trigger: none

variables:
  terraformStateName: terraformState
  terraformStateVersion: 1.0
  databaseBackupName: databaseBackup
  databaseBackupVersion: 1.0

# If setting up the whole infra for the first time
  freshSetup: true

resources:
 pipelines:
  - pipeline: FrontEndPipeline   
    source: ziaurrehman72.hello-rest-api
    trigger: 
      branches:
      - refs/heads/master
  - pipeline: BackEndPipeline   
    source: ziaurrehman72.hello-fe 
    trigger: 
      branches:
      - refs/heads/main

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    echo Creating Directory 'terraform'
    mkdir terraform
    echo Creating Directory 'database'
    mkdir database
    ls -lrt 
  displayName: 'Create directory structure'


- task: DownloadPackage@1
  displayName: Download Terraform State file
  condition: eq(variables.freshSetup, false)
  inputs:
    packageType: 'upack'
    feed: '861dcca4-4ec2-450d-9a1e-3da6589aaed3/88f2c9de-f3d7-411b-8a5b-eff9807a7bcc'
    definition: $(terraformState)
    version: $(terraformStateVersion)
    downloadPath: 'terraform/'
    extract: true


- task: DownloadPackage@1
  displayName: Download datbase backup
  condition: eq(variables.freshSetup, false)
  inputs:
    packageType: 'upack'
    feed: '861dcca4-4ec2-450d-9a1e-3da6589aaed3/3f5ab7a3-6c73-4098-894f-ddfcfac00b01'
    definition: $(databaseBackup)
    version: $(databaseBackupVersion)
    downloadPath: 'database/'
    extract: true

#TODO: decrypt terraform state file (if freshSetup)

#TODO: decrypt database file  (if freshSetup)

# - script: |
#     curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -    mkdir terraform
#     sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"    mkdir database
#     sudo apt-get update && sudo apt-get install terraform
#     terraform version
#   displayName: 'Install Terraform'

- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.3'

- task: AzureCLI@2
  displayName: Setting up Azure Authentication
  inputs:
    azureSubscription: 'MyPersonalSubscription(70b1733f-7ff9-40b8-8dac-faa365f7732c)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'echo "Authenticating to Azure Cloud..."'


#TODO: Run terraform
- script: |
    cd terraform/
    echo "Running terraform init"
    terraform init
    echo "Running terraform plan"
    terraform plan -var
    ls -lrt -R 
  displayName: 'Run Terraform'

#TODO: publish terraform state file to az feeds